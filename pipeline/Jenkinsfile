pipeline {

  agent {
    kubernetes {
      defaultContainer 'jnlp'
      yaml """
apiVersion: v1
kind: Pod
metadata:
  labels:
    job: ${env.JOB_NAME}
    job_id: ${env.BUILD_NUMBER}
spec:
  nodeSelector:
    role: worker
  containers:
  - name: lite-selenium-test
    image: gcr.io/sre-docker-registry/github.com/uktrade/lite-selenium-base
    imagePullPolicy: Always
    command:
    - cat
    tty: true
"""
    }
  }

parameters
  {
    choice(name: 'ENVIRONMENT', description: 'choose what environment to run in', choices: 'dev\nqa\ndevpopcorn\ndevkoala\nsandbox\nstaging\nuat\ndevdata')
    string(name: 'BRANCH', defaultValue: 'master', description: 'choose branch to run against')
    string(name: 'CIRCLE_API_TOKEN')
  }

  options {
    timestamps()
    ansiColor('xterm')
    buildDiscarder(logRotator(daysToKeepStr: '180'))
  }

  stages {

    stage('Run test') {
      steps { 
        script {
          sh """
          curl \
          -H 'Circle-Token: $CCI_API_TOKEN' \
          -H "Content-Type: application/json" \
          --data '{"branch":"$BRANCH","parameters":{"run_ui_tests":true,"run_unit_tests":false,"environment":"$ENVIRONMENT"}}}' \
          https://circleci.com/api/v2/project/gh/uktrade/lite-frontend/pipeline

          """
        } catch (error) {
  		    currentBuild.result = "UNSTABLE"
        }
      }
    }
  }
  post {
    changed {
       sendSlackNotification()
    }
  }
}


// Send Slack notification function
def sendSlackNotification()
{
	// build status of null means successful
	buildStatus =  currentBuild.result

    def emoji = ""
    if (buildStatus == "SUCCESS") {
        emoji = "ðŸŽ‰"
    } else {
        emoji = "ðŸ”¥"
    }

	def message = "${emoji}   UAT ${buildStatus} \nðŸ“‡   *lite-frontend* \nðŸ”—   ${env.BUILD_URL}"

	// Set notification colour based on build status
	if ("${params.ENVIRONMENT}" == "uat" && (buildStatus == "SUCCESS" || buildStatus == "UNSTABLE" || buildStatus == "FAILURE")) {
		if (buildStatus == "SUCCESS") {
		    colourCode = "#00703c"
		} else if (buildStatus == "UNSTABLE") {
		    colourCode = "#f47738"
		} else {
		    colourCode = "#d4351c"
		}

		// Set slack channel
		channel = "lite-merging"

		// Send notifications
		slackSend (color: colourCode, message: message, channel: "#${channel}")
	}
}
